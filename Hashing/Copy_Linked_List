/**
 * Definition for singly-linked list.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
RandomListNode* Solution::copyRandomList(RandomListNode* A) 
{
    if(A==NULL)
    {
        return NULL;
    }
    map<RandomListNode*,RandomListNode*>S;
    RandomListNode*head=A;
    while(head!=NULL)
    {
        RandomListNode*Y=(RandomListNode*)malloc(sizeof(RandomListNode)*1);
        Y->label=head->label;
        Y->next=NULL;
        Y->random=NULL;
        S[head]=Y;
        head=head->next;
    }
    RandomListNode*new_head=S[A];
    for(map<RandomListNode*,RandomListNode*>::iterator it=S.begin();it!=S.end();it++)
    {
        it->second->next=S[it->first->next];
        it->second->random=S[it->first->random];
    }
    return new_head;
    
}
